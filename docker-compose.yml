version: '3.8'

x-env_file: &env_file ./.env.global

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  nginx:
    container_name: nginx
    image: nginx:1.23
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx/:/etc/nginx/"
      - "./Django/static:/static"
      - "./nginx/.well-known:/.well-known"
    depends_on:
      - django
    env_file: *env_file
  django:
    container_name: Django
    build:
      context: Django
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    volumes:
      - ./Django/:/usr/src/app/
      - ./Django/.env.django:/env_files/.env.django
      - .env.global:/env_files/.env.global
    command: "sh entorypoint.sh"
    env_file:
      - ./Django/.env.django
      - *env_file
    depends_on:
      - mysql
      - redis
  mysql:
    image: mysql:8.0
    container_name: MySQL
    cap_add:
      - SYS_NICE
    ports:
      - 3306:3306
    volumes:
      - "./MySQL/data:/var/lib/mysql"
      - "./MySQL/my.cnf:/etc/mysql/conf.d/my.cnf"
    env_file:
      - ./MySQL/.env.mysql
      - *env_file
  phpmyadmin:
    container_name: phpMyAdmin
    image: phpmyadmin/phpmyadmin
    env_file:
      - ./phpMyAdmin/.env.phpmyadmin
      - *env_file
    links:
      - mysql
    ports:
      - 8080:80
    volumes:
      - "./phpMyAdmin/sessions:/sessions"
  redis:
    image: redis:7.0
    container_name: Redis
    ports:
      - 6379:6379
  prometheus:
    container_name: Prometheus
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
    #      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
      - django

  #    deploy:
  #      placement:
  #        constraints:
  #          - node.hostname == ${HOSTNAME}

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    deploy:
      mode: global

  # alertmanager:
  #   image: prom/alertmanager
  #   ports:
  #     - 9093:9093
  #   #    volumes:
  #   #      - ./alertmanager/:/etc/alertmanager/
  #   command:
  #     - '--config.file=/etc/alertmanager/config.yml'
  #     - '--storage.path=/alertmanager'
  # #    deploy:
  # #      placement:
  # #        constraints:
  # #          - node.hostname == ${HOSTNAME}
  cadvisor:
    container_name: cadvisor
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 5050:8080
    deploy:
      mode: global

  grafana:
    container_name: grafana
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/.env.grafana
